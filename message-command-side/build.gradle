plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}

ext {
    lombokVersion = '1.18.8'
    springSecurityCryptoVersion='5.1.5.RELEASE'
}

apply plugin:"application"
apply plugin:"groovy"

version "0.1"
group "message.command.side"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.2.0'
    }
}

dependencies {
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor 'io.micronaut:micronaut-inject-java'
    annotationProcessor 'io.micronaut:micronaut-validation'
	annotationProcessor 'io.micronaut:micronaut-security'
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    compileOnly 'io.micronaut:micronaut-inject-java'
    compile 'io.micronaut:micronaut-inject'
    compile 'io.micronaut:micronaut-validation'
    compile 'io.micronaut:micronaut-runtime'
	compile 'io.micronaut:micronaut-security-jwt'
    compile 'io.micronaut:micronaut-http-client'
    compile 'io.micronaut.configuration:micronaut-postgres-reactive'
	compile 'io.micronaut.configuration:micronaut-flyway'
    compile 'javax.annotation:javax.annotation-api'
    compile 'io.micronaut:micronaut-http-server-netty'
    compile "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'commons-logging:commons-logging:1.2'
    runtime 'org.postgresql:postgresql:42.2.5'
	testCompile 'org.codehaus.groovy:groovy-all:2.5.6'
    testCompile 'org.spockframework:spock-core:1.3-groovy-2.5'
	testCompile 'io.micronaut.test:micronaut-test-spock'
	testCompile 'org.testcontainers:spock:1.11.1'
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "io.resk.message.command.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
